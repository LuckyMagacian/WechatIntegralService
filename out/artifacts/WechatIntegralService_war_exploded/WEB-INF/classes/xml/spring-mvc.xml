<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">
    <!-- 支持@RequestMapping请求和Controller映射 -->
    <mvc:annotation-driven/>

    <!-- 扫描包 -->
    <context:component-scan base-package="com.lanxi" />

	<!-- 数据库配置文件 -->
	<util:properties id="dbconfig" location="classpath:properties/jdbc.properties"></util:properties>
	<!-- 数据库配置 	-->
	<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="#{dbconfig.driver}"></property>
		<property name="url"			 value="#{dbconfig.url}"></property> 
		<property name="username" 		 value="#{dbconfig.username}"></property>
		<property name="password" 		 value="#{dbconfig.password}"></property>
		<property name="initialSize" 	 value="#{dbconfig.initialSize}"></property>
		<property name="maxActive"		 value="#{dbconfig.maxActive}"></property>
		<property name="maxIdle"		 value="#{dbconfig.maxIdle}"></property>
		<property name="minIdle"		 value="#{dbconfig.minIdle}"></property>
		<property name="maxWait"		 value="#{dbconfig.maxWait}"></property>
	</bean>
	<!-- mybatis配置	 -->
	<bean id="ssfb" class="org.mybatis.spring.SqlSessionFactoryBean">
		 <property name="dataSource" ref="ds"></property>
		<property name="mapperLocations" value="classpath:com/lanxi/WechatIntegralService/dao/*.xml"></property>
	</bean>
	
	<!-- mapper扫描 -->
	<bean id="mappers" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lanxi.WechatIntegralService.dao"></property>
	</bean>
	
	<bean id="tasks"   lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref local="redPacketOverTime"></ref>
				<ref local="updateExpiredTaskTrigger"></ref>
				<ref local="deleteExpiredTaskTrigger"></ref>
			</list>
		</property>
	</bean>
	
	<bean id="redPacketOverTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="redPacketOverTimeJob"/> 
		<property name="cronExpression">
			<value>0 0 * * * ?</value><!-- 每小时执行一次点触发 -->
		</property>
	</bean>
	<!-- 任务 -->
	<bean id="redPacketOverTimeJob"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="quartzService"/>
		<property name="targetMethod">
			<value>redPacketOverTime</value>
		</property>
	</bean>
	
	<bean id="couponOverTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="couponOverTimeJob"/> 
		<property name="cronExpression">
			<value>0 0 * * * ?</value><!-- 每小时执行一次点触发 -->
		</property>
	</bean>
	<!-- 任务 -->
	<bean id="couponOverTimeJob"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="quartzService"/>
		<property name="targetMethod">
			<value>couponOverTime</value>
		</property>
	</bean>
	
	<bean id="updateExpiredTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateExpiredJob" />
        </property>
        <property name="cronExpression">
            <value>0 0/1 * * * ?</value>
        </property>
    </bean>
    <bean id="updateExpiredJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="quartzService" />
        </property>
        <property name="targetMethod">
            <value>updateStatusByTime</value>
        </property>
    </bean>
    
     <bean id="deleteExpiredTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="deleteExpiredJob" />
        </property>
        <property name="cronExpression">
            <value>0 0 0 * * ?</value>
        </property>
    </bean>
    <bean id="deleteExpiredJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="quartzService" />
        </property>
        <property name="targetMethod">
            <value>deleteCode</value>
        </property>
    </bean>
</beans>